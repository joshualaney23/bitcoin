import os

Import(['env'])

libEnv = env.Clone()
libEnv.Append(
    CPPPATH=['include'],
    # LIBS=[]
)

# Build shared library
sources = Glob('src/*.cpp')
crypto = libEnv.SharedLibrary('BtcCrypto', sources)
libEnv.Alias('crypto-lib', crypto)
libEnv.Alias('install-crypto-lib', env.Install(env['BTC_LIBS'], crypto))

# Build tests
testEnv = libEnv.Clone()
testEnv.Append(
    LIBS=[
        'BtcCrypto',
        'gtest',
    ]
)
sources = Glob('tests/*.cpp')

unitTests = testEnv.Program('CryptoLibTests', sources)
testCrypto = env.Install(testEnv['BTC_TESTS'], unitTests)
env.Alias('test-crypto-lib', testCrypto)

# Setup test runner
env.Test('test.cryptoLib', testCrypto)
env.AlwaysBuild('test.cryptoLib')
env.Alias('runtest-crypto-lib', 'test.cryptoLib')