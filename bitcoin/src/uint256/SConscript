import os

Import(['env'])

libEnv = env.Clone()
libEnv.Append(
    CPPPATH=['include'],
    # LIBS=[]
)

# Build shared library
sources = Glob('src/*.cpp')
uint256 = libEnv.SharedLibrary('Uint256Lib', sources)
libEnv.Alias('uint256-lib', uint256)
libEnv.Alias('install-uint256-lib', env.Install(env['BTC_LIBS'], uint256))

# Build tests
testEnv = env.Clone()
testEnv.Append(
    LIBS=[
        'Uint256Lib',
        'gtest',
        'gtest_main',
    ]
)
sources = Glob('tests/*.cpp')

unitTests = testEnv.Program('Uint256LibTests', sources)
testUint256 = env.Install(testEnv['BTC_TESTS'], unitTests)
env.Alias('test-uint256-lib', testUint256)

# Setup test runner
env.Test('test.Uint256Lib', testUint256)
env.AlwaysBuild('test.Uint256Lib')
env.Alias('runtest-uint256-lib', 'test.Uint256Lib')
